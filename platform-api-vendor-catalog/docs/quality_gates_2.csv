"gate_name","gate_type","trigger_event","success_criteria","failure_action","responsible_team","automation_level","tools_used","measurement_frequency","escalation_procedure","historical_pass_rate","average_resolution_time","business_impact"
"Pull Request Gate","Static Analysis & Unit Test","Code commit to a feature branch","Unit test coverage > 80%; Linting passes; No critical issues in SonarQube scan.","Block merge to main branch; notify developer.","Development Team","Fully Automated","GitHub Actions, Jest, ESLint, SonarQube","Every commit","PR review comments from tech lead.","90","1.5","Prevents basic code quality issues and regressions from entering the main codebase."
"Staging Deployment Gate","E2E & Integration","Merge to main branch","All integration tests pass; All contract tests (Pact) pass; E2E smoke test suite passes.","Halt deployment pipeline; create P1 incident; notify on-call team.","QA Team / DevOps","Fully Automated","GitHub Actions, Cypress, Detox, Pact Broker","Every merge to main","Automatic P1 alert in PagerDuty.","85","4","Prevents broken builds from reaching the staging environment, ensuring a stable platform for UAT."
"Production Release Gate","Release Readiness","Manual trigger for production deployment","All staging E2E regression tests pass; No outstanding P1/P2 bugs for the release; Manual UAT sign-off from Product Owner; Performance tests show no degradation > 5%.","Abort production deployment; schedule emergency review meeting.","Release Manager / Product Owner","Partially Automated","Jira, GitHub Actions, Confluence","Per release","Go/No-Go decision by release committee.","98","24","Final quality check to prevent critical defects from impacting production users."