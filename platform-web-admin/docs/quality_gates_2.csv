"gate_name","gate_type","trigger_event","success_criteria","failure_action","responsible_team","automation_level","tools_used","measurement_frequency","escalation_procedure","historical_pass_rate","average_resolution_time","business_impact"
"CI Quality Gate","Code Quality","Pull Request to main","Linting passes; Unit test coverage > 80%; Snyk scan finds 0 critical vulnerabilities; All unit tests pass.","Block PR merge.","Development Team","Fully Automated","GitHub Actions, Jest, Snyk, ESLint","Every PR","PR author is notified automatically.","90","1.5","Prevents low-quality or vulnerable code from entering the main branch."
"Staging Deployment Gate","Integration & Smoke Test","Merge to main","All API integration tests pass; Critical path E2E smoke test (Login, Add to Cart) passes; Deployment to staging successful.","Rollback staging deployment; Create P1 bug and alert on-call developer.","DevOps & QA Team","Fully Automated","GitHub Actions, Cypress, Jest/Supertest","Every merge to main","Alert sent to dev team Slack channel.","85","4","Ensures the staging environment is always in a testable state."
"Production Release Gate","Regression & Performance","Manual trigger for production release","Full E2E regression suite pass rate > 98%; Performance tests show no degradation > 10% from baseline; Manual approval from QA Lead and Product Owner.","Abort production release.","QA Lead, Product Owner","Partially Automated","GitHub Actions, Cypress, k6","Per release","Go/No-Go meeting with stakeholders.","99","24","Prevents critical defects from reaching production users."