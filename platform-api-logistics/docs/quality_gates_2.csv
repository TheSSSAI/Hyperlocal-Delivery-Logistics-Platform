"gate_name","gate_type","trigger_event","success_criteria","failure_action","responsible_team","automation_level","tools_used","measurement_frequency","escalation_procedure","historical_pass_rate","average_resolution_time","business_impact"
"Code Commit Quality Gate","Static Analysis & Unit Test","On every `git push` to a feature branch.","Linting and formatting checks pass; Unit test suite passes with >80% code coverage.","Block commit push via pre-push hook; Fail CI build.","Development Team","Fully Automated","ESLint, Prettier, Jest, GitHub Actions","Every commit","Immediate feedback to the developer in their IDE and the CI/CD log.","98","0.2","Prevents basic code quality issues and regressions from entering the codebase."
"Pull Request Quality Gate","Integration & Security","On creation/update of a Pull Request to `main`.","All checks from Code Commit Gate pass; Integration test suite passes; Contract tests pass; No 'High' or 'Critical' vulnerabilities found by Snyk/Trivy.","Block PR merge; Require at least one peer review approval.","Development & QA Teams","Fully Automated","Jest, Supertest, Pact, Snyk, GitHub Actions","Every PR","PR comments and automated Slack notifications to the team channel.","92","1.5","Prevents integration issues, breaking changes, and security vulnerabilities from reaching the main branch."
"Staging Deployment Quality Gate","E2E & Smoke Test","After successful deployment to the Staging environment.","E2E smoke test suite (covering critical paths like login, order placement) passes with 100% success rate.","Trigger an automated rollback of the deployment; Create a P1 incident and alert the on-call team.","DevOps & QA Teams","Fully Automated","Cypress, Detox, GitHub Actions","Every deployment to Staging","Automated PagerDuty alert to on-call engineer.","95","4","Prevents broken builds from staying in the primary testing environment, protecting QA and stakeholder validation efforts."