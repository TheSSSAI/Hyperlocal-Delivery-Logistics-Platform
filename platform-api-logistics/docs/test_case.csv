"test_id","feature_area","test_type","test_level","priority","automation_candidate","automation_roi","test_description","business_risk","technical_complexity","preconditions","test_steps","expected_result","test_data_needs","tools_required","estimated_effort_hours","automation_effort_hours","maintenance_effort_annual","dependencies","environment_requirements","success_criteria","failure_impact","regression_frequency","data_setup_complexity","cleanup_requirements","security_considerations","performance_expectations","accessibility_requirements"
"TEST-AUTH-001","Customer Authentication","Functional","E2E","Critical","true","High","Verify the full OTP-based login flow for an existing, active customer, including token issuance and redirection. (Ref: CUS-003)","High - Login failure blocks all returning users, preventing orders and causing dissatisfaction.","Medium","An active customer account exists with a known mobile number. The application is at the login screen.","1. Enter the registered mobile number. 2. Tap 'Send OTP'. 3. Retrieve the OTP from the test harness. 4. Enter the correct OTP. 5. Tap 'Verify & Login'.","User is successfully authenticated. Valid JWT access and refresh tokens are stored securely. User is redirected to the main discovery screen.","Active customer test account; Mobile number that can receive OTPs in test environment.","Detox/Appium; Test Harness for OTP retrieval.","2","12","4","Identity & Access Service; AWS SNS; AWS Cognito.","Staging environment with integrated services.","Login completes in < 3 seconds; JWTs are valid; Correct redirection occurs.","Critical - All returning users are blocked.","Every release, Smoke Test Suite","Low","Logout and clear session tokens.","Verify secure storage of tokens on the device (Keychain/Keystore).","End-to-end flow < 3 seconds (REQ-FUN-002).","WCAG 2.1 AA compliance for login form."
"TEST-PAY-001","Payment Processing","Functional","E2E","Critical","true","High","Verify a customer can successfully complete a purchase using the Razorpay payment gateway for an online payment method (UPI). (Ref: CUS-025)","Critical - Failure in the payment flow results in direct revenue loss and high cart abandonment.","High","Customer is logged in; Items are in the cart; Customer is on the payment selection screen.","1. Select 'UPI' as payment method. 2. Tap 'Proceed to Pay'. 3. On the Razorpay test interface, approve the transaction. 4. Be redirected back to the app.","The app displays the 'Order Placed Successfully!' screen. An order record is created in the backend with status 'Pending Vendor Acceptance'. A transaction record is created.","Razorpay sandbox credentials; Test user with items in cart.","Detox/Appium; Razorpay Sandbox.","4","16","8","Order Management Service; Payments Service; Razorpay Gateway.","Staging environment with Razorpay sandbox integration.","Order is created; Payment is confirmed; Correct confirmation screen is shown.","Critical - Blocks all revenue.","Every release, Smoke Test Suite","Medium","Cancel the created order if possible.","Verify PCI-DSS compliance (no card data stored). Verify payment signature on the backend.","Redirection to gateway < 2 seconds.","N/A"
"TEST-PERF-001","API Performance","Performance","System","High","true","High","Verify that critical APIs (Search, Order Create, Rider Allocation) meet the P95 latency requirement of < 200ms under sustained load. (Ref: REQ-1-093)","High - Poor performance leads to a bad user experience, cart abandonment, and failed deliveries.","High","A dedicated, production-sized performance testing environment is available. Load testing scripts are prepared.","1. Ramp up virtual users to 10,000 over 10 minutes. 2. Maintain a sustained load of 100 new orders/minute. 3. Execute search queries and rider allocations concurrently. 4. Monitor API latency for 30 minutes.","The 95th percentile latency for all critical APIs remains below 200ms. Error rate remains below 0.1%.","Large, realistic dataset of vendors, products, and users. Pre-generated authentication tokens for virtual users.","k6/JMeter; Prometheus; Grafana.","8","24","12","All core backend microservices.","Dedicated performance testing environment.","P95 latency < 200ms; Error rate < 0.1%; System remains stable.","High - Indicates the system will not scale.","Pre-release, Major releases","High","Tear down load generators; Purge test data.","Test environment must be isolated from production.","As per REQ-1-093.","N/A"
"TEST-E2E-001","Core Delivery Flow","Functional","E2E","Critical","true","High","Verify the end-to-end happy path: A customer places an order, the vendor accepts it, a rider is assigned and completes the delivery with Photo POD. (Ref: CUS-025, VND-017, RDR-012, RDR-022)","Critical - A failure in this core loop means the business cannot function.","High","Active Customer, Vendor, and Rider accounts exist and are logged into their respective applications.","1. Customer: Add item to cart and place a prepaid order. 2. Vendor: Receive and accept the order, select prep time, mark as 'Ready for Pickup'. 3. System: Allocate task to Rider. 4. Rider: Accept task, navigate to vendor, mark 'Picked Up', navigate to customer. 5. Customer: View live rider tracking. 6. Rider: Mark 'Arrived', take Photo POD, mark 'Delivered'.","The order successfully transitions through all states to 'Delivered'. All parties receive correct notifications. Financials are recorded correctly.","Active accounts for all 3 user types; A vendor with an in-stock product.","Cypress (for Vendor Web), Detox/Appium (for Mobile Apps), Test harness to coordinate actions.","6","40","20","All core services and client applications.","Staging environment.","Order completes successfully; All status changes are correct.","Critical.","Every release, Smoke Test Suite","High","Reset state of all users.","Ensure data is segregated between user sessions.","Each step should feel responsive.","Each UI should meet WCAG 2.1 AA."
"TEST-SEC-001","Application Security","Security","System","Critical","true","High","Run automated vulnerability scans (dependency and container) within the CI/CD pipeline and fail the build if any 'High' or 'Critical' vulnerabilities are found. (Ref: REQ-1-098)","Critical - Deployment of vulnerable software could lead to a system-wide data breach.","Medium","CI/CD pipeline is established. Scanning tools are configured.","1. Trigger the CI/CD pipeline (e.g., on a PR merge). 2. Wait for the 'security-scan' stage to execute.","The pipeline fails and blocks deployment if a critical vulnerability is detected in any dependency or in the final container image.","A temporary branch with a known vulnerable dependency added to package.json.","GitHub Actions; Snyk/Trivy.","1","10","5","CI/CD infrastructure.","CI/CD runner environment.","Pipeline correctly identifies and blocks deployment of vulnerable code.","Critical - Security risk.","Every build","Low","Remove the temporary branch.","As per description.","Scan should complete within 5 minutes.","N/A"
"TEST-ADMIN-001","Admin User Management","Functional","E2E","High","true","Medium","Verify an Admin can suspend a user account, and the suspended user is immediately unable to log in or use the service. (Ref: ADM-006)","High - Inability to suspend malicious users poses a security and operational risk.","Medium","Active Admin account and an active Customer account exist.","1. Admin: Log in, navigate to User Management, find the customer. 2. Admin: Click 'Suspend', enter a reason, and confirm. 3. Customer: Attempt to log in. 4. Customer: Attempt to use an old, valid JWT to access a protected API.","Admin sees user status as 'Suspended'. An audit log is created. Customer login attempt fails with 'Account suspended' message. API call with old JWT fails with 401/403.","Admin account, Customer account with active session.","Cypress; Detox/Appium; Postman.","2","14","6","Identity & Access Service; Audit Log Service; Session invalidation mechanism (e.g., Redis blacklist).","Staging environment.","User access is revoked immediately; Action is logged.","High - Security risk.","Every release","Medium","Reactivate the suspended user.","Session invalidation must be immediate.","Suspension action completes < 500ms.","Admin UI meets WCAG 2.1 AA."