"gate_name","gate_type","trigger_event","success_criteria","failure_action","responsible_team","automation_level","tools_used","measurement_frequency","escalation_procedure","historical_pass_rate","average_resolution_time","business_impact"
"Pull Request Gate","Static & Unit","Code commit to a feature branch","Linting passes; Unit test coverage > 85% for new/changed code; SonarQube scan finds 0 new critical bugs and security hotspots.","Block merge to main branch; Fail CI build.","Development Team","Fully Automated","GitHub Actions, Jest, SonarQube, ESLint","Every commit","PR author is notified automatically.","92","1.5","Prevents basic errors and code quality issues from entering the main codebase."
"Staging Deployment Gate","Integration & E2E","Merge to main branch","All integration tests pass; All contract tests (Pact) pass; Automated E2E smoke suite passes; Container vulnerability scan finds 0 critical/high vulnerabilities.","Block deployment to Staging; Roll back build; Trigger P2 alert to the on-call developer.","DevOps & QA Team","Fully Automated","GitHub Actions, Jest, Pact, Cypress, Trivy","Every merge to main","On-call dev and QA Lead notified via PagerDuty/Slack.","85","4","Ensures the Staging environment remains stable and functional for UAT and further testing."
"Release to Production Gate","Manual & Regression","Manual trigger for a scheduled release","Full E2E regression suite pass rate > 95%; Manual UAT completed and signed off by Product Owner; Performance tests show no degradation against baseline; All high-priority bugs from the release candidate are resolved.","Halt the release; Trigger a go/no-go meeting.","Release Manager, QA Lead, Product Owner","Partially Automated","Cypress, Jira, k6","Per release candidate","Release Manager convenes a meeting with all stakeholders.","99","24","Final quality check to prevent critical defects from impacting production users."