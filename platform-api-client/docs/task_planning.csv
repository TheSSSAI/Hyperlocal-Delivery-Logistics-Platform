"task_id","title","description","type","status","priority","assignee","reporter","due_date","estimated_hours","story_points","labels","sprint","sprint_goal","epic","epic_id","project","parent_id","dependencies","skills_required","complexity","risk_level","acceptance_criteria","definition_of_done","created_at","updated_at","sprint_start_date","sprint_end_date","capacity_allocation","collaboration_required","external_dependencies","testing_requirements","deployment_notes","business_value"
"VND-005-T1","[DB] Design and Implement VendorProfile Entity","Define and create the TypeORM entity for `VendorProfile`, including fields for store name, address, contact details, and geocoded location (latitude/longitude). This includes setting up relationships and constraints.","Task","Sprint Backlog","Critical","backend-dev-1@company.com","product.owner@company.com","2024-11-08","4","","backend,database,typeorm","Sprint 1","Establish foundational vendor profile, catalog entities, compliance framework, and CI/CD pipeline.","Vendor Profile & Compliance Management","EPIC-001","Vendor & Catalog Service","VND-005","","TypeORM,PostgreSQL,TypeScript","Low","Low","`VendorProfile` entity is created with all required fields. TypeORM migration is generated and successfully applied.","Code reviewed; Migration script tested; Merged to main.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","Unit testing of entity definition.","Migration must be run before service deployment.","Foundation for all vendor-related data."
"VND-005-T2","[Backend] Implement API for Vendor Profile Management","Create the NestJS controller, service, and DTO for managing the `VendorProfile`. Implement GET and PUT endpoints. The PUT endpoint must handle address updates by calling the geocoding service and validating against operational zones.","Task","Sprint Backlog","Critical","backend-dev-1@company.com","product.owner@company.com","2024-11-11","10.3","","backend,api,nestjs,integration","Sprint 1","Establish foundational vendor profile, catalog entities, compliance framework, and CI/CD pipeline.","Vendor Profile & Compliance Management","EPIC-001","Vendor & Catalog Service","VND-005","VND-005-T1","NestJS,TypeScript,REST API,Geocoding","Medium","Medium","GET and PUT endpoints for vendor profile are functional and secure. Geocoding and zone validation are implemented.","Code reviewed; Integration tests passing; OpenAPI spec updated.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","Coordination on geofencing service API.","Mapbox API","Integration testing with mocked external APIs.","","Enables vendor self-service for profile management."
"VND-005-T3","[QA] Implement Tests for Vendor Profile API","Create a comprehensive test suite for the vendor profile endpoints, including unit tests for service logic and integration tests for the controller.","Task","Sprint Backlog","Critical","qa-engineer-1@company.com","product.owner@company.com","2024-11-13","9.3","","qa,testing,jest,supertest","Sprint 1","Establish foundational vendor profile, catalog entities, compliance framework, and CI/CD pipeline.","Vendor Profile & Compliance Management","EPIC-001","Vendor & Catalog Service","VND-005","VND-005-T2","Jest,Supertest,TypeScript,Mocking","Medium","Low","Unit tests >80% coverage. Integration tests cover happy path, validation errors, and authorization failures.","All tests passing in CI/CD pipeline.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","Backend developer for API details.","","Unit, Integration","","Ensures API quality and reliability."
"VND-006-T1","[DB] Design and Implement VendorBusinessHour Entity","Create the TypeORM entity for `VendorBusinessHour` with a many-to-one relationship to `VendorProfile`. Include fields for day of the week, opening time, and closing time.","Task","Sprint Backlog","Critical","backend-dev-2@company.com","product.owner@company.com","2024-11-08","3.2","","backend,database,typeorm","Sprint 1","Establish foundational vendor profile, catalog entities, compliance framework, and CI/CD pipeline.","Vendor Profile & Compliance Management","EPIC-001","Vendor & Catalog Service","VND-006","VND-005-T1","TypeORM,PostgreSQL","Low","Low","`VendorBusinessHour` entity created with correct fields and relationships. Migration generated and applied.","Code reviewed; Migration script tested; Merged to main.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","Unit testing of entity definition.","Migration must be run before service deployment.","Foundation for store availability logic."
"VND-006-T2","[Backend] Implement Business Hours Validation Logic","In the `VendorService`, extend the profile update logic to validate incoming business hours. Implement checks to ensure time slots do not overlap and that closing times are after opening times.","Task","Sprint Backlog","Critical","backend-dev-2@company.com","product.owner@company.com","2024-11-12","7.2","","backend,api,nestjs,validation","Sprint 1","Establish foundational vendor profile, catalog entities, compliance framework, and CI/CD pipeline.","Vendor Profile & Compliance Management","EPIC-001","Vendor & Catalog Service","VND-006","VND-006-T1,VND-005-T2","NestJS,TypeScript","Medium","Low","Validation logic correctly identifies and rejects overlapping or invalid time slots.","Code reviewed; Unit tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","Unit testing of the validation logic for edge cases.","","Ensures data integrity for business hours."
"VND-006-T3","[QA] Implement Integration Tests for Business Hours API","Create integration tests that send various valid and invalid business hour configurations to the profile update endpoint and assert the correct responses (200 OK vs. 400 Bad Request).","Task","Sprint Backlog","Critical","qa-engineer-1@company.com","product.owner@company.com","2024-11-14","7.2","","qa,testing,jest,supertest","Sprint 1","Establish foundational vendor profile, catalog entities, compliance framework, and CI/CD pipeline.","Vendor Profile & Compliance Management","EPIC-001","Vendor & Catalog Service","VND-006","VND-006-T2","Jest,Supertest","Medium","Low","Test cases for valid single/multiple slots pass. Test cases for invalid/overlapping slots fail with 400.","All tests passing in CI/CD pipeline.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","Integration","","Ensures API quality for business hours management."
"VND-007-T1","[Backend] Implement API Endpoint for Availability Toggle","Add an `isOnline` boolean field to the `VendorProfile` entity. Create a dedicated PATCH endpoint `/api/v1/vendor/profile/availability` that accepts a boolean status.","Task","Sprint Backlog","Critical","backend-dev-3@company.com","product.owner@company.com","2024-11-08","4","","backend,api,nestjs","Sprint 1","Establish foundational vendor profile, catalog entities, compliance framework, and CI/CD pipeline.","Vendor Profile & Compliance Management","EPIC-001","Vendor & Catalog Service","VND-007","VND-005-T1","NestJS,TypeORM","Low","Low","PATCH request successfully updates the `isOnline` field. Endpoint is protected by RBAC.","Code reviewed; Integration tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","Integration","","Enables vendors to control their store's real-time availability."
"VND-007-T2","[Backend] Implement Event Publishing for Status Change","Using the Transactional Outbox pattern, publish a `VendorStatusChanged` event to an SNS topic whenever the `isOnline` status is updated. The event payload must include `vendorId` and the new `status`.","Task","Sprint Backlog","Critical","backend-dev-3@company.com","product.owner@company.com","2024-11-12","8.3","","backend,event-driven,aws-sns","Sprint 1","Establish foundational vendor profile, catalog entities, compliance framework, and CI/CD pipeline.","Vendor Profile & Compliance Management","EPIC-001","Vendor & Catalog Service","VND-007","VND-007-T1","NestJS,AWS SNS,Event-Driven Architecture","High","High","Successful status update atomically publishes a `VendorStatusChanged` event. Event payload is correct.","Code reviewed; Integration tests for Transactional Outbox passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","Integration testing simulating database failures to verify atomicity.","","Ensures system-wide consistency for store availability."
"VND-007-T3","[QA] Write Integration Tests for Availability Toggle","Create integration tests for the availability toggle endpoint, covering happy path, authorization failure, and verifying the correct event is published upon success.","Task","Sprint Backlog","Critical","qa-engineer-1@company.com","product.owner@company.com","2024-11-14","2.2","","qa,testing,jest,aws-sdk","Sprint 1","Establish foundational vendor profile, catalog entities, compliance framework, and CI/CD pipeline.","Vendor Profile & Compliance Management","EPIC-001","Vendor & Catalog Service","VND-007","VND-007-T2","Jest,Supertest,AWS SDK Mocks","Low","Low","Test cases cover toggling both ways, event emission, and authorization failure.","All tests passing in CI/CD pipeline.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","Integration","","Guarantees reliability of the availability toggle feature."
"VND-008-T1","[DB] Design and Implement ProductCategory Entity","Create the TypeORM entity for `ProductCategory` with a many-to-one relationship to `VendorProfile`. Include fields for name and ensure a unique constraint on (vendorId, name).","Task","Sprint Backlog","Critical","backend-dev-1@company.com","product.owner@company.com","2024-11-08","3.2","","backend,database,typeorm","Sprint 1","Establish foundational vendor profile, catalog entities, compliance framework, and CI/CD pipeline.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-008","VND-005-T1","TypeORM,PostgreSQL","Low","Low","`ProductCategory` entity is created. Migration is generated and applied.","Code reviewed; Migration passed.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","Unit","Migration must be run before service deployment.","Foundation for product catalog organization."
"VND-008-T2","[Backend] Implement Category CRUD API","Create a `category.controller.ts` and `category.service.ts` with full CRUD endpoints. Implement validation to prevent deleting a category that contains products by checking the relationship.","Task","Sprint Backlog","Critical","backend-dev-1@company.com","product.owner@company.com","2024-11-12","6.3","","backend,api,nestjs","Sprint 1","Establish foundational vendor profile, catalog entities, compliance framework, and CI/CD pipeline.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-008","VND-008-T1","NestJS,TypeORM","Medium","Low","Vendor can perform CRUD on their own categories. API rejects deletion of categories with associated products (409). API rejects duplicate names (409).","Code reviewed; Integration tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","Integration","","Enables vendors to organize their products."
"VND-008-T3","[QA] Implement Tests for Category API","Write integration tests for the category CRUD endpoints, including validation for duplicate names and deletion of non-empty categories.","Task","Sprint Backlog","Critical","qa-engineer-1@company.com","product.owner@company.com","2024-11-14","6.2","","qa,testing,jest,supertest","Sprint 1","Establish foundational vendor profile, catalog entities, compliance framework, and CI/CD pipeline.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-008","VND-008-T2","Jest,Supertest","Medium","Low","CRUD tests pass. Tests for duplicate name (409) and deleting a category with products (409) pass.","All tests passing in CI/CD pipeline.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","Integration","","Ensures quality of the category management feature."
"VND-027-T1","[DB] Design and Implement VendorLicense Entity","Create the TypeORM entity for `VendorLicense` with a many-to-one relationship to `VendorProfile`. Include fields for license number, type, and expiry date.","Task","Sprint Backlog","Critical","backend-dev-2@company.com","product.owner@company.com","2024-11-08","3.2","","backend,database,typeorm,compliance","Sprint 1","Establish foundational vendor profile, catalog entities, compliance framework, and CI/CD pipeline.","Vendor Profile & Compliance Management","EPIC-001","Vendor & Catalog Service","VND-027","VND-005-T1","TypeORM,PostgreSQL","Low","Low","`VendorLicense` entity created. Migration generated and applied.","Code reviewed; Migration passed.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","Unit","Migration must be run before service deployment.","Foundation for vendor compliance features."
"VND-027-T2","[Backend] Implement License Management CRUD API","Create a new NestJS controller and service for managing `VendorLicense` entities. Implement GET, POST, PUT, and DELETE endpoints, protected by RBAC guards.","Task","Sprint Backlog","Critical","backend-dev-2@company.com","product.owner@company.com","2024-11-13","7.2","","backend,api,nestjs,crud","Sprint 1","Establish foundational vendor profile, catalog entities, compliance framework, and CI/CD pipeline.","Vendor Profile & Compliance Management","EPIC-001","Vendor & Catalog Service","VND-027","VND-027-T1","NestJS,TypeORM","Medium","Low","Vendor can CRUD their own licenses. API validates expiry date is in the future.","Code reviewed; Integration tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","Integration","","Enables vendors to manage their compliance documents."
"VND-027-T3","[QA] Implement Tests for License Management API","Create a full suite of integration tests for the new license CRUD endpoints. Cover all success cases, validation errors, and authorization failures.","Task","Sprint Backlog","Critical","qa-engineer-1@company.com","product.owner@company.com","2024-11-15","7.2","","qa,testing,jest,supertest","Sprint 1","Establish foundational vendor profile, catalog entities, compliance framework, and CI/CD pipeline.","Vendor Profile & Compliance Management","EPIC-001","Vendor & Catalog Service","VND-027","VND-027-T2","Jest,Supertest","Medium","Low","Tests for CRUD endpoints pass. Tests for invalid data and authorization failures pass.","All tests passing in CI/CD pipeline.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","Integration","","Ensures quality of the license management feature."
"WI-012-T1","[DevOps] Create Multi-stage Dockerfile","Create a multi-stage Dockerfile to build, test, and package the NestJS application into a lightweight, secure production image running as a non-root user.","Task","Sprint Backlog","Critical","backend-dev-3@company.com","product.owner@company.com","2024-11-06","4","","devops,docker,ci-cd","Sprint 1","Establish foundational vendor profile, catalog entities, compliance framework, and CI/CD pipeline.","Service Infrastructure & DevOps","EPIC-003","Vendor & Catalog Service","INFRA-VCS-01","","Docker","Low","Low","Dockerfile builds successfully. Final image is < 500MB. Container runs as non-root.","Dockerfile merged to main branch.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","Build verification.","Required for all deployments.","Enables containerized deployment of the service."
"WI-013-T1","[DevOps] Define Service Infrastructure in Terraform","Create Terraform configurations for the service's AWS resources, including dedicated SQS queues for import/export jobs and IAM roles with least-privilege permissions.","Task","Sprint Backlog","Critical","backend-dev-3@company.com","product.owner@company.com","2024-11-11","10.3","","devops,terraform,iaac,aws","Sprint 1","Establish foundational vendor profile, catalog entities, compliance framework, and CI/CD pipeline.","Service Infrastructure & DevOps","EPIC-003","Vendor & Catalog Service","INFRA-VCS-01","","Terraform,AWS IAM,AWS SQS","Medium","Medium","`terraform apply` completes successfully. Resources (SQS, IAM roles) are created in AWS.","Terraform code reviewed and merged. Resources provisioned in dev environment.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","Security team for IAM policy review.","","Manual verification in AWS console.","","Automates provisioning of required cloud infrastructure."
"WI-014-T1","[DevOps] Create GitHub Actions CI/CD Pipeline","Develop a GitHub Actions workflow that automates the build, test, vulnerability scan, image push to ECR, and deployment to the EKS cluster for the staging environment.","Task","Sprint Backlog","Critical","backend-dev-3@company.com","product.owner@company.com","2024-11-15","12","","devops,ci-cd,github-actions,kubernetes","Sprint 1","Establish foundational vendor profile, catalog entities, compliance framework, and CI/CD pipeline.","Service Infrastructure & DevOps","EPIC-003","Vendor & Catalog Service","INFRA-VCS-01","WI-012-T1,WI-013-T1","GitHub Actions,YAML,Docker,Kubernetes","High","Medium","A push to the main branch successfully triggers a deployment to staging. Build fails if tests fail.","Pipeline successfully runs and deploys the service to staging.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","E2E pipeline execution.","","Enables automated and reliable deployments."
"WI-015-T1","[Backend] Implement Observability Tooling","Integrate Prometheus, OpenTelemetry, and structured JSON logging. Expose a `/metrics` endpoint, ensure logs go to stdout, and configure an interceptor to propagate `correlationId`.","Task","Sprint Backlog","High","backend-dev-1@company.com","product.owner@company.com","2024-11-15","9.3","","backend,observability,prometheus,opentelemetry","Sprint 1","Establish foundational vendor profile, catalog entities, compliance framework, and CI/CD pipeline.","Service Infrastructure & DevOps","EPIC-003","Vendor & Catalog Service","INFRA-VCS-01","","NestJS,Prometheus,OpenTelemetry","Medium","Low","Service metrics scraped by Prometheus. Logs in CloudWatch are structured JSON. Traces are visible in Jaeger.","Code reviewed; Verification in monitoring tools.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","DevOps team for observability stack details.","","Manual verification.","","Provides critical visibility into service health and performance."
"VND-009-T1","[DB] Design and Implement Product Entity","Create the TypeORM entity for `Product` with relationships to `VendorProfile` and `ProductCategory`. Include fields for name, description, price, stock quantity, image URL, and a `deletedAt` for soft-deletes.","Task","Sprint Backlog","Critical","backend-dev-1@company.com","product.owner@company.com","2024-11-19","5.2","","backend,database,typeorm","Sprint 2","Complete manual product catalog management (CRUD) and automate vendor compliance workflows.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-009","VND-008-T1","TypeORM,PostgreSQL","Medium","Low","`Product` entity is created with all required fields. Migration is generated and applied.","Code reviewed; Migration passed.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Unit","","Core data model for the marketplace's primary offering."
"VND-009-T2","[Backend] Implement S3 Service for Pre-signed URL Generation","Create a dedicated `s3.service.ts` to encapsulate logic for generating pre-signed PUT URLs for image uploads. This service will be injected into the `ProductService`.","Task","Sprint Backlog","Critical","backend-dev-2@company.com","product.owner@company.com","2024-11-20","6.3","","backend,aws-s3,security","Sprint 2","Complete manual product catalog management (CRUD) and automate vendor compliance workflows.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-009","","NestJS,AWS S3 SDK,TypeScript","Medium","High","Service method generates a valid, time-limited S3 pre-signed URL for a given object key.","Code reviewed; Unit tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","Security team for IAM policy review.","","Unit testing of URL generation.","","Provides a secure mechanism for client-side file uploads."
"VND-009-T3","[Backend] Implement Product Creation API Endpoint","Create the POST endpoint for product creation using a two-step flow: initiate creation to get a pre-signed URL, then complete creation after upload.","Task","Sprint Backlog","Critical","backend-dev-1@company.com","product.owner@company.com","2024-11-22","10.3","","backend,api,nestjs,crud","Sprint 2","Complete manual product catalog management (CRUD) and automate vendor compliance workflows.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-009","VND-009-T1,VND-009-T2","NestJS,TypeORM,REST API","Medium","Low","Two-step creation process is functional. Validation for price, stock, etc. is enforced.","Code reviewed; Integration tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Integration","","Enables vendors to add products to their catalog."
"VND-009-T4","[QA] Implement Tests for Product Creation Flow","Create integration tests for the entire product creation flow, including requesting the pre-signed URL, mocking the S3 upload, and calling the completion endpoint. Test all validation rules and authorization.","Task","Sprint Backlog","Critical","qa-engineer-1@company.com","product.owner@company.com","2024-11-25","10.3","","qa,testing,jest,supertest","Sprint 2","Complete manual product catalog management (CRUD) and automate vendor compliance workflows.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-009","VND-009-T3","Jest,Supertest,AWS SDK Mocks","High","Low","E2E test of the two-step creation process passes. Tests for invalid data and authorization failures pass.","All tests passing in CI/CD pipeline.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Integration, E2E","","Ensures quality of the core product creation feature."
"VND-010-T1","[Backend] Implement Product Update (PATCH) API","Create a PATCH endpoint `/api/v1/vendor/products/{id}` to update product details. Handle optional image replacement by providing a new pre-signed URL if an `updateImage` flag is sent.","Task","Sprint Backlog","Critical","backend-dev-2@company.com","product.owner@company.com","2024-11-26","8","","backend,api,nestjs","Sprint 2","Complete manual product catalog management (CRUD) and automate vendor compliance workflows.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-010","VND-009-T3","NestJS,TypeORM","Medium","Low","PATCH request successfully updates product fields. Image replacement flow is functional. RBAC is enforced.","Code reviewed; Integration tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Integration","","Allows vendors to manage their product lifecycle."
"VND-010-T2","[QA] Implement Tests for Product Update API","Write integration tests for the PATCH endpoint. Cover updating single fields, multiple fields, and the image replacement flow.","Task","Sprint Backlog","Critical","qa-engineer-1@company.com","product.owner@company.com","2024-11-27","6.3","","qa,testing,jest","Sprint 2","Complete manual product catalog management (CRUD) and automate vendor compliance workflows.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-010","VND-010-T1","Jest,Supertest","Medium","Low","Tests cover single/multiple field updates and image replacement. Authorization is tested.","All tests passing in CI/CD pipeline.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Integration","","Ensures quality of the product update feature."
"VND-011-T1","[Backend] Define Internal API Contract for Active Order Check","Define the OpenAPI specification for an internal endpoint that the Order Management service will expose, e.g., `GET /internal/orders/active-by-product-ids`.","Task","Sprint Backlog","Critical","backend-dev-3@company.com","product.owner@company.com","2024-11-19","4","","backend,api-design,openapi,integration","Sprint 2","Complete manual product catalog management (CRUD) and automate vendor compliance workflows.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-011","","API Design,OpenAPI","Medium","Medium","OpenAPI spec for the endpoint is defined and agreed upon by both teams.","Contract is approved and checked into repository.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","Order Management service team.","Order Management Service","Peer review.","","Unblocks development of the safe product deletion feature."
"VND-011-T2","[Backend] Implement Product Deletion (DELETE) API","Implement the DELETE endpoint `/api/v1/vendor/products/{id}`. The service logic must first call the Order Management service to check if the product is in an active order. If not, it performs a soft-delete.","Task","Sprint Backlog","Critical","backend-dev-3@company.com","product.owner@company.com","2024-11-26","10.3","","backend,api,nestjs","Sprint 2","Complete manual product catalog management (CRUD) and automate vendor compliance workflows.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-011","VND-011-T1,VND-009-T1","NestJS,TypeORM,REST API","High","Medium","DELETE for valid product succeeds (204). DELETE for product in active order fails (409). Product is soft-deleted.","Code reviewed; Integration tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","Order Management service team for integration.","Order Management Service","Integration testing with mocked Order Management API.","","Allows vendors to safely remove products from their catalog."
"VND-011-T3","[QA] Implement Tests for Product Deletion API","Write integration tests for the DELETE endpoint, mocking the response from the Order Management service. Cover scenarios where the product is in an active order and where it is not.","Task","Sprint Backlog","Critical","qa-engineer-1@company.com","product.owner@company.com","2024-11-28","9.5","","qa,testing,jest,mocking","Sprint 2","Complete manual product catalog management (CRUD) and automate vendor compliance workflows.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-011","VND-011-T2","Jest,Supertest,Mocking","Medium","Low","Test for deleting valid product passes. Test for deleting product in active order fails with 409. Authorization is tested.","All tests passing in CI/CD pipeline.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Integration","","Ensures quality of the product deletion feature."
"VND-012-T1","[Backend] Add Threshold Field and Update API","Add a `limited_stock_threshold` integer field to the `VendorProfile` entity and extend the `PUT /api/v1/vendor/profile` endpoint to allow updating this value.","Task","Sprint Backlog","Medium","backend-dev-1@company.com","product.owner@company.com","2024-11-20","3.2","","backend,api,typeorm","Sprint 2","Complete manual product catalog management (CRUD) and automate vendor compliance workflows.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-012","VND-005-T2","NestJS,TypeORM","Low","Low","Migration is successful. PUT endpoint updates the threshold. Validation for non-negative integer is in place.","Code reviewed; Integration tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Integration","","Allows vendors to configure their stock display preferences."
"VND-012-T2","[Backend] Implement Calculated Stock Status Logic","Modify the `product.service` to include a calculated `stockStatus` field in the product DTOs it returns. The logic will compare `stockQuantity` against the vendor's `limitedStockThreshold`.","Task","Sprint Backlog","Medium","backend-dev-1@company.com","product.owner@company.com","2024-11-21","4","","backend,nestjs,business-logic","Sprint 2","Complete manual product catalog management (CRUD) and automate vendor compliance workflows.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-012","VND-012-T1","NestJS,TypeScript","Low","Low","Products correctly return 'Available', 'Limited Stock', or 'Out of Stock' based on quantity and threshold.","Code reviewed; Unit tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Unit","","Improves customer experience by showing accurate stock status."
"VND-012-T3","[QA] Implement Integration Tests for Stock Status","Create integration tests that set a vendor's threshold, then fetch products with various stock levels and assert that the returned `stockStatus` field is correct in each case.","Task","Sprint Backlog","Medium","qa-engineer-1@company.com","product.owner@company.com","2024-11-22","2.2","","qa,testing,jest","Sprint 2","Complete manual product catalog management (CRUD) and automate vendor compliance workflows.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-012","VND-012-T2","Jest,Supertest","Low","Low","Test cases for all three stock statuses ('Available', 'Limited', 'Out of Stock') pass.","All tests passing in CI/CD pipeline.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Integration","","Ensures quality of the stock status feature."
"SYS-004-T1","[Backend] Implement License Expiry Check Logic","In a new service (`license-check.service.ts`), implement the logic to query the database for all licenses expiring in exactly 30, 15, and 7 days.","Task","Sprint Backlog","High","backend-dev-2@company.com","product.owner@company.com","2024-11-22","6.3","","backend,nestjs,cron,compliance","Sprint 2","Complete manual product catalog management (CRUD) and automate vendor compliance workflows.","Vendor Profile & Compliance Management","EPIC-001","Vendor & Catalog Service","SYS-004","VND-027-T1","NestJS,TypeORM,PostgreSQL","Medium","Low","Service method correctly returns lists of licenses due for 30, 15, and 7-day reminders.","Code reviewed; Unit tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Unit","","Core logic for automating compliance reminders."
"SYS-004-T2","[Backend] Implement Scheduled Job and Event Publishing","Create a scheduled task using the NestJS scheduler (`@Cron()`) that runs once daily. This job will call the `license-check.service` and, for each expiring license found, publish a `LicenseExpiringSoon` event to an SNS topic.","Task","Sprint Backlog","High","backend-dev-2@company.com","product.owner@company.com","2024-11-26","8","","backend,nestjs,cron,aws-sns","Sprint 2","Complete manual product catalog management (CRUD) and automate vendor compliance workflows.","Vendor Profile & Compliance Management","EPIC-001","Vendor & Catalog Service","SYS-004","SYS-004-T1","NestJS,Cron Jobs,AWS SNS","Medium","Medium","Scheduled job runs at the configured time. Job correctly identifies licenses and publishes one event per license.","Code reviewed; Integration tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Integration","","Automates the triggering of compliance notifications."
"SYS-004-T3","[Infra] Configure Kubernetes CronJob for License Check","Define a Kubernetes CronJob resource in Terraform/YAML that triggers the license check endpoint on the Vendor service according to the daily schedule.","Task","Sprint Backlog","High","backend-dev-3@company.com","product.owner@company.com","2024-11-27","4.3","","devops,kubernetes,terraform","Sprint 2","Complete manual product catalog management (CRUD) and automate vendor compliance workflows.","Vendor Profile & Compliance Management","EPIC-001","Vendor & Catalog Service","SYS-004","SYS-004-T2","Kubernetes,Terraform,YAML","Medium","Low","CronJob resource is defined in IaC. Job is successfully scheduled in the EKS cluster for staging.","IaC code reviewed and merged. Job verified in Kubernetes dashboard.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Manual verification.","","Provides the scheduled execution environment for the compliance job."
"SYS-004-T4","[QA] E2E Test for License Expiry Notification Flow","Design and implement an E2E test that seeds the database with a license expiring in 30 days, manually triggers the cron job endpoint, and verifies that the correct event is published to SNS.","Task","Sprint Backlog","High","qa-engineer-1@company.com","product.owner@company.com","2024-11-29","5.3","","qa,testing,e2e,aws-sdk","Sprint 2","Complete manual product catalog management (CRUD) and automate vendor compliance workflows.","Vendor Profile & Compliance Management","EPIC-001","Vendor & Catalog Service","SYS-004","SYS-004-T2","Jest,Supertest,AWS SDK","Medium","Low","Test correctly seeds data, triggers job, and verifies the expected `LicenseExpiringSoon` event on a test SNS topic consumer.","E2E test passing in CI/CD pipeline.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","E2E","","Guarantees the reliability of the automated reminder system."
"SYS-005-T1","[Backend] Extend License Check Job for Suspension","Modify the daily scheduled job to also query for licenses with an expiry date in the past. For each found, update the corresponding vendor's status to 'suspended_license_expired'.","Task","Sprint Backlog","Critical","backend-dev-2@company.com","product.owner@company.com","2024-11-27","5.3","","backend,nestjs,cron,compliance","Sprint 2","Complete manual product catalog management (CRUD) and automate vendor compliance workflows.","Vendor Profile & Compliance Management","EPIC-001","Vendor & Catalog Service","SYS-005","SYS-004-T1","NestJS,TypeORM","Medium","Low","Job correctly identifies vendors with expired licenses and updates their status. Job is idempotent.","Code reviewed; Unit tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Unit","","Automates the enforcement of vendor compliance."
"SYS-005-T2","[Backend] Publish VendorSuspended Event","After successfully updating a vendor's status to 'suspended_license_expired', use the Transactional Outbox pattern to publish a `VendorSuspended` event to an SNS topic.","Task","Sprint Backlog","Critical","backend-dev-2@company.com","product.owner@company.com","2024-11-28","3.3","","backend,event-driven,aws-sns","Sprint 2","Complete manual product catalog management (CRUD) and automate vendor compliance workflows.","Vendor Profile & Compliance Management","EPIC-001","Vendor & Catalog Service","SYS-005","SYS-005-T1,VND-007-T2","NestJS,AWS SNS","Low","Low","Job correctly publishes the event after suspending a vendor. Event publication is atomic.","Code reviewed; Integration tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Integration","","Informs the rest of the system about a vendor's non-compliant status."
"SYS-005-T3","[QA] E2E Test for Vendor Suspension Flow","Create an E2E test that seeds the database with an expired license, triggers the cron job, verifies the vendor's status is updated, and confirms the `VendorSuspended` event is published.","Task","Sprint Backlog","Critical","qa-engineer-1@company.com","product.owner@company.com","2024-11-29","4","","qa,testing,e2e","Sprint 2","Complete manual product catalog management (CRUD) and automate vendor compliance workflows.","Vendor Profile & Compliance Management","EPIC-001","Vendor & Catalog Service","SYS-005","SYS-005-T2","Jest,Supertest,AWS SDK","Medium","Low","Test seeds data, triggers job, asserts DB status, and verifies SNS event.","E2E test passing in CI/CD pipeline.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","E2E","","Ensures the automated vendor suspension system is reliable."
"VND-013-T1","[Backend] Implement CSV Upload and Job Trigger API","Create an API endpoint for vendors to get a pre-signed S3 URL to upload their CSV. Create a second endpoint to notify the backend after upload is complete, which then enqueues a message in an SQS queue for processing.","Task","Sprint Backlog","High","backend-dev-1@company.com","product.owner@company.com","2024-12-04","6.3","","backend,api,aws-s3,aws-sqs","Sprint 3","Launch bulk catalog import feature, including robust validation and error reporting.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-013","","NestJS,AWS S3,AWS SQS","Medium","Medium","GET endpoint returns a valid S3 pre-signed URL. POST endpoint enqueues a message to the import SQS queue.","Code reviewed; Integration tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-02","2024-12-13","100%","","","Integration","","Provides the entrypoint for the bulk import feature."
"VND-013-T2","[Backend] Develop CSV Row Validation Service","Create a `csv-validation.service.ts` that takes a single row and validates it against all business rules: required fields, data types, value ranges, and category existence.","Task","Sprint Backlog","High","backend-dev-2@company.com","product.owner@company.com","2024-12-09","12","","backend,nestjs,validation","Sprint 3","Launch bulk catalog import feature, including robust validation and error reporting.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-013","","NestJS,TypeScript","High","Medium","Service correctly identifies rows with missing/invalid data. Service returns structured error messages for all validation failures.","Code reviewed; Extensive unit tests passing with >90% coverage.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-02","2024-12-13","100%","","","Unit","","Core logic for ensuring data quality in bulk imports."
"VND-013-T3","[Backend] Implement CSV Import Worker Logic","Create the SQS consumer that processes the import job. The worker will download the CSV, parse it, use the validation service, process valid rows (create/update), and collect failed rows.","Task","Sprint Backlog","High","backend-dev-1@company.com","product.owner@company.com","2024-12-11","16.7","","backend,nestjs,aws-sqs,database","Sprint 3","Launch bulk catalog import feature, including robust validation and error reporting.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-013","VND-013-T2","NestJS,Node.js Streams,TypeORM,PostgreSQL","High","High","Worker consumes messages, processes rows, performs create/update logic correctly. Database operations are transactional.","Code reviewed; Integration tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-02","2024-12-13","100%","","","Integration","","Core processing engine for the bulk import feature."
"VND-014-T1","[Backend] Extend Import Worker for Error Report Generation","Modify the `import.worker.ts` to collect all failed rows and their corresponding error messages. After processing the main file, if there are failures, generate a new CSV file in memory for the error report.","Task","Sprint Backlog","High","backend-dev-2@company.com","product.owner@company.com","2024-12-10","6.3","","backend,nestjs,csv","Sprint 3","Launch bulk catalog import feature, including robust validation and error reporting.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-014","VND-013-T3","NestJS,CSV Parsing/Writing libraries","Medium","Low","Worker collects failed rows. Worker generates a valid CSV string for the error report.","Code reviewed; Unit tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-02","2024-12-13","100%","","","Unit","","Enables vendors to self-correct import errors."
"VND-014-T2","[Backend] Implement Error Report Upload and Notification","Further extend the import worker to upload the generated error report CSV to S3. Then, send a notification to the vendor with a summary of the import (X success, Y failures) and a pre-signed download URL.","Task","Sprint Backlog","High","backend-dev-2@company.com","product.owner@company.com","2024-12-12","8","","backend,nestjs,aws-s3","Sprint 3","Launch bulk catalog import feature, including robust validation and error reporting.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-014","VND-014-T1","NestJS,AWS S3","Medium","Low","Error report is uploaded to S3. A pre-signed URL is generated. Vendor receives a notification with the URL.","Code reviewed; E2E test passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-02","2024-12-13","100%","","","E2E","","Completes the feedback loop for failed imports."
"VND-014-T3","[QA] E2E Test for Import with Errors","Create an E2E test that uploads a CSV containing both valid and invalid rows. The test must verify the import summary, download the error report, and validate its contents.","Task","Sprint Backlog","High","qa-engineer-1@company.com","product.owner@company.com","2024-12-13","10.3","","qa,testing,e2e","Sprint 3","Launch bulk catalog import feature, including robust validation and error reporting.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-014","VND-014-T2","Jest,Supertest,CSV Parsing","High","Medium","Test uploads mixed-quality CSV, verifies correct number of products created, downloads error report, and asserts its contents.","Test passing in CI/CD pipeline.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-02","2024-12-13","100%","","","E2E","","Ensures the reliability of the entire bulk import with errors feature."
"CUS-024-T1","[Backend] Implement Internal Batch Inventory Check API","Implement an internal-only endpoint `POST /internal/products/check-availability` that accepts an array of `{ productId, quantity }`. The endpoint must efficiently query the database and return which items are available.","Task","Sprint Backlog","Critical","backend-dev-3@company.com","product.owner@company.com","2024-12-06","7.3","","backend,api,performance","Sprint 3","Launch bulk catalog import feature, including robust validation and error reporting.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","CUS-024","VND-009-T1","NestJS,TypeORM,PostgreSQL","Medium","Low","Endpoint is internal-only. Endpoint correctly validates availability for a batch of items and returns a detailed response.","Code reviewed; Integration tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-02","2024-12-13","100%","Order service team (consumer).","","Integration, Performance","","Provides a critical, high-performance check to prevent checkout failures."
"CUS-024-T2","[QA] Performance Test for Batch Inventory Check API","Create and execute a load test scenario for the batch inventory check endpoint to ensure it meets the P95 latency requirement of under 50ms under a simulated load of 100 requests per second.","Task","Sprint Backlog","Critical","qa-engineer-1@company.com","product.owner@company.com","2024-12-09","5.2","","qa,performance-testing,k6","Sprint 3","Launch bulk catalog import feature, including robust validation and error reporting.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","CUS-024","CUS-024-T1","k6,Performance Testing","Medium","Low","Load test script is created. P95 latency remains below 50ms at 100 RPS.","Test report is reviewed and approved.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-02","2024-12-13","100%","","","Performance","","Ensures the checkout process remains fast and reliable at scale."
"VND-015-T1","[Infra] Create SQS Queue for Export Jobs","Define the SQS queue and its associated Dead-Letter Queue (DLQ) in Terraform for handling asynchronous product export jobs.","Task","Sprint Backlog","Medium","backend-dev-3@company.com","product.owner@company.com","2024-12-17","3.2","","devops,terraform,aws-sqs","Sprint 4","Deliver internal onboarding tools and vendor catalog export functionality.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-015","WI-013-T1","Terraform,AWS SQS","Low","Low","Terraform config for SQS and DLQ is created. Resources are provisioned successfully.","IaC code reviewed and merged.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-16","2024-12-27","100%","","","Manual verification.","","Provides the infrastructure for asynchronous catalog exports."
"VND-015-T2","[Backend] Implement API to Trigger Export Job","Create a POST endpoint `/api/v1/vendor/products/export` that creates a new export job record and enqueues a message in the SQS export queue.","Task","Sprint Backlog","Medium","backend-dev-1@company.com","product.owner@company.com","2024-12-18","5.2","","backend,api,aws-sqs","Sprint 4","Deliver internal onboarding tools and vendor catalog export functionality.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-015","VND-015-T1","NestJS,AWS SQS","Low","Low","API endpoint created and protected. Successful request places a message in the SQS queue.","Code reviewed; Integration tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-16","2024-12-27","100%","","","Integration","","Provides the entrypoint for the vendor export feature."
"VND-015-T3","[Backend] Implement Export Worker Logic","Create a worker process that processes export jobs. It must stream products from the database, format them into a CSV string, upload the file to S3, and update the job status.","Task","Sprint Backlog","Medium","backend-dev-1@company.com","product.owner@company.com","2024-12-23","14","","backend,worker,aws-sqs,aws-s3,streams","Sprint 4","Deliver internal onboarding tools and vendor catalog export functionality.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-015","VND-015-T2","NestJS,TypeORM,AWS S3,Node.js Streams","High","Medium","Worker consumes messages, generates valid CSV, uploads to S3, and updates job status. Handles large catalogs via streaming.","Code reviewed; E2E test passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-16","2024-12-27","100%","","","E2E, Performance","","Core processing engine for the bulk export feature."
"VND-015-T4","[Backend] Implement Notification and Download Link","After the export job completes, the system must notify the vendor. This involves generating a pre-signed S3 download URL for the CSV file and sending an in-app notification with this link.","Task","Sprint Backlog","Medium","backend-dev-1@company.com","product.owner@company.com","2024-12-24","5.2","","backend,aws-s3,notifications","Sprint 4","Deliver internal onboarding tools and vendor catalog export functionality.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-015","VND-015-T3","NestJS,AWS S3 SDK","Medium","Low","Valid, time-limited S3 pre-signed URL is generated. Notification is sent with the download link.","Code reviewed; E2E test passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-16","2024-12-27","100%","","","E2E","","Completes the feedback loop for the export feature."
"VND-015-T5","[QA] E2E Test for Bulk Export Flow","Create an end-to-end test that triggers an export, gets the download URL, downloads the file, and validates the CSV content.","Task","Sprint Backlog","Medium","qa-engineer-1@company.com","product.owner@company.com","2024-12-26","3","","qa,testing,e2e","Sprint 4","Deliver internal onboarding tools and vendor catalog export functionality.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","VND-015","VND-015-T4","Jest,Supertest","Medium","Low","Test triggers and completes the export flow. Downloaded CSV content is validated.","Test passing in CI/CD pipeline.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-16","2024-12-27","100%","","","E2E","","Ensures reliability of the bulk export feature."
"TRN-001-T1","[Dev] Setup Standalone CLI Script Project","Initialize a new Node.js/TypeScript project for the CLI tool. Set up the basic structure, dependencies (`xlsx`, `fast-csv`, `commander`), and a main entrypoint file.","Task","Sprint Backlog","Medium","backend-dev-2@company.com","product.owner@company.com","2024-12-17","6","","backend,cli,typescript","Sprint 4","Deliver internal onboarding tools and vendor catalog export functionality.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","TRN-001","","Node.js,TypeScript,npm","Low","Low","Project is initialized. A basic 'hello world' command runs successfully.","Code reviewed and merged.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-16","2024-12-27","100%","","","Manual execution.","","Foundation for the internal data transformation tool."
"TRN-001-T2","[Dev] Implement File Parsing and Transformation Logic","Implement the core logic to read both CSV and XLSX files. Transform the data row by row based on a configurable mapping, including cleaning and basic validation.","Task","Sprint Backlog","Medium","backend-dev-2@company.com","product.owner@company.com","2024-12-20","14","","backend,cli,data-transformation","Sprint 4","Deliver internal onboarding tools and vendor catalog export functionality.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","TRN-001","TRN-001-T1","TypeScript,Node.js,xlsx,fast-csv","High","Low","Script parses sample XLSX and CSV files. Data is cleaned and transformed. Rows with missing data are identified.","Code reviewed; Unit tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-16","2024-12-27","100%","","","Unit","","Core logic for automating vendor data preparation."
"TRN-001-T3","[Dev] Implement Output File Generation and Documentation","Implement logic to write the processed data into two separate CSV files: one for clean data and one for failed rows. Create a comprehensive `README.md` for the tool.","Task","Sprint Backlog","Medium","backend-dev-2@company.com","product.owner@company.com","2024-12-23","6.3","","backend,cli,documentation","Sprint 4","Deliver internal onboarding tools and vendor catalog export functionality.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","TRN-001","TRN-001-T2","TypeScript,Node.js,Markdown","Medium","Low","A clean CSV and an error report CSV are generated. A `README.md` is created.","Code reviewed; Manual execution and verification.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-16","2024-12-27","100%","","","Manual","","Completes the internal tool by providing usable outputs and documentation."
"TRN-001-T4","[QA] Test Script with Various Input Files","Prepare a suite of test spreadsheets and run the script against each to verify the output files and console messages are correct.","Task","Sprint Backlog","Medium","qa-engineer-1@company.com","product.owner@company.com","2024-12-24","6","","qa,manual-testing,cli","Sprint 4","Deliver internal onboarding tools and vendor catalog export functionality.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","TRN-001","TRN-001-T3","QA,Manual Testing","Medium","Low","Tests cover valid/invalid/mixed XLSX and CSV files. Output is verified.","QA sign-off on test report.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-16","2024-12-27","100%","","","Manual","","Ensures the reliability of the internal data transformation tool."
"TRN-002-T1","[Backend] Create API to Fetch Migration Batch Sample","Implement a GET endpoint `/api/v1/admin/migration-batches/{batchId}/sample` that returns metadata about the import batch and a paginated sample of up to 20 products associated with it.","Task","Sprint Backlog","Medium","backend-dev-3@company.com","product.owner@company.com","2024-12-20","7","","backend,api,admin","Sprint 4","Deliver internal onboarding tools and vendor catalog export functionality.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","TRN-002","VND-013-T3","NestJS,TypeORM","Medium","Low","Endpoint returns batch metadata and product sample. Endpoint is protected by an Admin RBAC guard.","Code reviewed; Integration tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-16","2024-12-27","100%","","","Integration","","Enables the admin validation UI for migrated data."
"TRN-002-T2","[Backend] Implement APIs to Approve/Reject Migration Batch","Create two POST endpoints: `/api/v1/admin/migration-batches/{batchId}/approve` and `/api/v1/admin/migration-batches/{batchId}/reject`. These endpoints will update the status of the migration batch.","Task","Sprint Backlog","Medium","backend-dev-3@company.com","product.owner@company.com","2024-12-23","8","","backend,api,admin,audit","Sprint 4","Deliver internal onboarding tools and vendor catalog export functionality.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","TRN-002","TRN-002-T1","NestJS,TypeORM","Medium","Low","Approve/Reject endpoints change status correctly. Actions are logged in the central audit trail.","Code reviewed; Integration tests passing.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-16","2024-12-27","100%","Audit service team.","Audit Log Service","Integration","","Provides the core logic for the admin validation workflow."
"TRN-002-T3","[QA] Implement Tests for Migration Validation APIs","Create integration tests for the new admin migration endpoints. Cover fetching a sample, approving a batch, and rejecting a batch. Verify status changes and audit log integration.","Task","Sprint Backlog","Medium","qa-engineer-1@company.com","product.owner@company.com","2024-12-26","6.3","","qa,testing,jest,mocking","Sprint 4","Deliver internal onboarding tools and vendor catalog export functionality.","Vendor Catalog & Inventory Management","EPIC-002","Vendor & Catalog Service","TRN-002","TRN-002-T2","Jest,Supertest,Mocking","Medium","Low","Tests for fetching, approving, and rejecting pass. Audit log integration is mocked and verified.","All tests passing in CI/CD pipeline.","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-12-16","2024-12-27","100%","","","Integration","","Ensures quality of the admin data validation workflow."