"task_id","title","description","type","status","priority","assignee","reporter","due_date","estimated_hours","story_points","labels","sprint","sprint_goal","epic","epic_id","project","parent_id","dependencies","skills_required","complexity","risk_level","acceptance_criteria","definition_of_done","created_at","updated_at","sprint_start_date","sprint_end_date","capacity_allocation","collaboration_required","external_dependencies","testing_requirements","deployment_notes","business_value"
"IA-TSK-001","Initialize NestJS project and core modules","Scaffold a new NestJS application using the CLI. Establish the initial module structure for Auth, Users, and Admin. Configure ESLint and Prettier for code quality.","Task","Sprint Backlog","Critical","backend.lead@company.com","product.owner@company.com","2024-11-04","2","1","backend,setup,nestjs","Sprint 1","Establish the service foundation, database schema with PostGIS, and a fully automated CI/CD pipeline.","Foundational Service Setup & Deployment","EPIC-001","Hyperlocal Delivery Service","US-001","","NestJS,TypeScript","Low","Low","The project can be started locally. Lint and format commands are functional. Core modules are created.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","Run npm run start:dev and npm run lint.","Initial commit to Git repository.","Provides the essential technical groundwork for the microservice."
"IA-TSK-002","Configure TypeORM for PostgreSQL Connectivity","Integrate @nestjs/typeorm and pg. Configure the connection to PostgreSQL using environment variables sourced via @nestjs/config.","Task","Sprint Backlog","Critical","backend.lead@company.com","product.owner@company.com","2024-11-05","4.2","2","backend,database,typeorm","Sprint 1","Establish the service foundation, database schema with PostGIS, and a fully automated CI/CD pipeline.","Foundational Service Setup & Deployment","EPIC-001","Hyperlocal Delivery Service","US-001","IA-TSK-001","NestJS,TypeORM,PostgreSQL","Low","Low","Application successfully establishes a database connection on startup using .env files.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","DevOps for RDS access","AWS RDS instance","Application startup logs show a successful database connection.","Requires database credentials to be configured in the environment.","Enables database interaction for all subsequent features."
"IA-TSK-003","Define All TypeORM Entities for Identity Service","Create and define all TypeORM entities required by the 'Identity & Access Service ER Diagram': User, CustomerProfile, Address, UserConsent, AuditLog, and SystemConfiguration.","Task","Sprint Backlog","Critical","backend.dev@company.com","product.owner@company.com","2024-11-06","8.3","3","backend,database,typeorm","Sprint 1","Establish the service foundation, database schema with PostGIS, and a fully automated CI/CD pipeline.","Foundational Service Setup & Deployment","EPIC-001","Hyperlocal Delivery Service","US-001","IA-TSK-002","TypeScript,TypeORM,PostgreSQL","Medium","Low","All specified entities are created as TypeScript classes with TypeORM decorators. Relationships are correctly defined.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","Successful generation of a migration file from these entities.","","Defines the core data structure for the Identity service."
"IA-TSK-004","Implement Database Migration Setup and Initial Migration","Configure TypeORM CLI to manage database migrations. Generate the initial migration file based on the entities created in the previous task.","Task","Sprint Backlog","Critical","backend.dev@company.com","product.owner@company.com","2024-11-07","3.2","2","backend,database,migration","Sprint 1","Establish the service foundation, database schema with PostGIS, and a fully automated CI/CD pipeline.","Foundational Service Setup & Deployment","EPIC-001","Hyperlocal Delivery Service","US-001","IA-TSK-003","TypeORM,SQL","Low","Low","`npm run migration:generate` creates a valid migration file. `npm run migration:run` successfully applies the migration.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","Running the migration against a test database and inspecting the schema.","Migration will be part of the CD pipeline.","Enables automated and version-controlled schema management."
"IA-TSK-005","Integrate AWS Secrets Manager Client","Implement a service or utility function that uses the AWS SDK to fetch secrets (like database credentials) from AWS Secrets Manager.","Task","Sprint Backlog","High","backend.lead@company.com","product.owner@company.com","2024-11-08","6.3","3","backend,aws,security","Sprint 1","Establish the service foundation, database schema with PostGIS, and a fully automated CI/CD pipeline.","Foundational Service Setup & Deployment","EPIC-001","Hyperlocal Delivery Service","US-001","IA-TSK-002","NestJS,AWS SDK,IAM","Medium","Medium","In 'production' mode, the application fetches DB credentials from Secrets Manager. In 'development' mode, it uses .env files.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","DevOps for IAM roles","AWS Secrets Manager","Integration test that mocks the AWS SDK and confirms correct credentials are used.","Requires correct IAM role assignment in the EKS deployment.","Secures database credentials, preventing them from being stored in version control."
"IA-TSK-006","Create Multi-Stage Dockerfile for Production","Develop a multi-stage Dockerfile. The 'builder' stage installs all dependencies and compiles the TypeScript code. The final 'production' stage copies only the compiled output.","Task","Sprint Backlog","Critical","devops.engineer@company.com","product.owner@company.com","2024-11-05","4.2","2","devops,docker,ci-cd","Sprint 1","Establish the service foundation, database schema with PostGIS, and a fully automated CI/CD pipeline.","Foundational Service Setup & Deployment","EPIC-002","Hyperlocal Delivery Service","US-002","IA-TSK-001","Docker,Node.js","Low","Low","The `docker build` command successfully creates a container image. Final image size is less than 200MB. Container runs as a non-root user.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","Successfully building the image and running it locally.","This Dockerfile will be used in the CD pipeline.","Creates optimized and secure container images for deployment."
"IA-TSK-007","Configure GitHub Actions CI Workflow","Create a `ci.yml` workflow file that triggers on `pull_request` to the main branch. The workflow must run linting, tests, and check code coverage.","Task","Sprint Backlog","Critical","devops.engineer@company.com","product.owner@company.com","2024-11-06","6.3","3","devops,github-actions,ci","Sprint 1","Establish the service foundation, database schema with PostGIS, and a fully automated CI/CD pipeline.","Foundational Service Setup & Deployment","EPIC-002","Hyperlocal Delivery Service","US-002","IA-TSK-001","GitHub Actions,YAML","Medium","Low","A pull request with linting errors, failing tests, or code coverage below 80% fails the CI check.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","","Creating test pull requests that are expected to fail and pass the CI checks.","This is a critical gate for code quality.","Automates code quality checks, improving stability and reducing bugs."
"IA-TSK-008","Develop Terraform Configuration for EKS Service","Create Terraform files to define the Kubernetes resources for the service: Deployment, Service, Ingress, and HorizontalPodAutoscaler.","Task","Sprint Backlog","Critical","devops.engineer@company.com","product.owner@company.com","2024-11-08","12","5","devops,terraform,kubernetes,aws-eks","Sprint 1","Establish the service foundation, database schema with PostGIS, and a fully automated CI/CD pipeline.","Foundational Service Setup & Deployment","EPIC-002","Hyperlocal Delivery Service","US-002","","Terraform,Kubernetes,AWS EKS","High","Medium","`terraform apply` successfully deploys the resources to the EKS cluster. Configuration defines liveness and readiness probes.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","Backend team for probe endpoints","Provisioned EKS cluster","Successful `terraform apply` and verification of running pods and accessible service endpoint.","Defines the production infrastructure for the service.","Enables infrastructure as code, providing repeatable and version-controlled deployments."
"IA-TSK-009","Configure GitHub Actions CD Workflow for Deployment","Create a `cd.yml` workflow file that triggers on pushes to the `main` branch. This workflow will configure AWS credentials via OIDC, build and push the Docker image to ECR, and then execute `terraform apply`.","Task","Sprint Backlog","Critical","devops.engineer@company.com","product.owner@company.com","2024-11-11","10.3","5","devops,github-actions,cd,terraform","Sprint 1","Establish the service foundation, database schema with PostGIS, and a fully automated CI/CD pipeline.","Foundational Service Setup & Deployment","EPIC-002","Hyperlocal Delivery Service","US-002","IA-TSK-006,IA-TSK-008","GitHub Actions,YAML,AWS IAM,Terraform","High","High","A merge to the `main` branch successfully builds and pushes a new image to AWS ECR. The `terraform apply` step successfully initiates a rolling deployment in EKS.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","AWS OIDC provider configured","A successful end-to-end deployment triggered by a merge to the main branch.","This pipeline will be the primary path to production.","Automates the release process, enabling rapid and reliable deployments."
"IA-TSK-019","Configure PostGIS in Terraform and Update Address Entity","Modify the Terraform configuration for the AWS RDS instance to enable the `postgis` extension. Update the `Address` TypeORM entity to use the `geography(Point, 4326)` type and add a spatial index.","Task","Sprint Backlog","Critical","devops.engineer@company.com","product.owner@company.com","2024-11-12","10","5","database,postgis,terraform,aws-rds","Sprint 1","Establish the service foundation, database schema with PostGIS, and a fully automated CI/CD pipeline.","User Profile & Data Management","EPIC-003","Hyperlocal Delivery Service","US-007","IA-TSK-003,IA-TSK-008","Terraform,AWS RDS,PostgreSQL,PostGIS","High","Medium","`terraform apply` successfully enables the PostGIS extension on RDS. A new migration is generated and runs successfully.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","Backend team for entity update","","Successful Terraform apply and database schema inspection.","This is a critical infrastructure change and prerequisite for address management.","Enables efficient geospatial queries required for core platform logistics."
"IA-TSK-034","Configure Application-wide Structured JSON Logging","Integrate a logger like `pino` and `pino-http` as a global middleware in the NestJS application. Configure it to output all logs in JSON format.","Task","Sprint Backlog","High","backend.dev@company.com","product.owner@company.com","2024-11-13","6.3","3","backend,observability,logging","Sprint 1","Establish the service foundation, database schema with PostGIS, and a fully automated CI/CD pipeline.","Observability and Monitoring","EPIC-006","Hyperlocal Delivery Service","US-013","IA-TSK-001","NestJS,TypeScript","Medium","Low","Every HTTP request generates at least one structured JSON log entry. All logs for a request share a `correlationId`.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-04","2024-11-15","100%","","AWS CloudWatch","Inspecting logs in AWS CloudWatch to verify format and correlation ID.","","Enables effective log analysis and debugging in a distributed system."
"IA-TSK-010","Implement API Endpoint to Request Registration OTP","Create a `POST /api/v1/auth/register/otp` endpoint. It must validate mobile number, check for existence, generate/store OTP, and trigger SMS.","Task","Sprint Backlog","Critical","backend.lead@company.com","product.owner@company.com","2024-11-18","8.7","3","backend,auth,otp","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","User Authentication & Session Management","EPIC-002","Hyperlocal Delivery Service","US-003","IA-TSK-004","NestJS,Redis,AWS SNS,TypeORM","Medium","High","A valid new number receives an SMS. Existing number returns 409. Rate limit returns 429.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","AWS SNS, Redis","API tests covering all success and error paths.","","Initiates the secure user registration process."
"IA-TSK-011","Implement API Endpoint to Verify OTP and Create User","Create a `POST /api/v1/auth/register/verify` endpoint. Validates OTP, creates user in PostgreSQL and Cognito, and generates JWTs.","Task","Sprint Backlog","Critical","backend.lead@company.com","product.owner@company.com","2024-11-19","10.7","5","backend,auth,jwt,aws-cognito","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","User Authentication & Session Management","EPIC-002","Hyperlocal Delivery Service","US-003","IA-TSK-010","NestJS,TypeORM,Redis,AWS Cognito,JWT","High","High","Correct OTP results in 201 with JWTs. New user created in PG and Cognito. Incorrect OTP returns 400.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","AWS Cognito","E2E API test from OTP request to JWT issuance.","Saga pattern should be considered for data consistency.","Completes the user registration and provides them with access to the platform."
"IA-TSK-012","Extend Registration Logic for Vendor and Rider Roles","Modify registration logic to accept a `role` ('vendor' or 'rider') and create the user with a `pending_verification` status without issuing JWTs.","Task","Sprint Backlog","Critical","backend.dev@company.com","product.owner@company.com","2024-11-20","4.2","2","backend,auth,roles","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","User Authentication & Session Management","EPIC-002","Hyperlocal Delivery Service","US-004","IA-TSK-011","NestJS,TypeORM","Low","Low","Submitting with `role: 'vendor'` creates a user with `status: 'pending_verification'`. No JWTs are returned.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","API tests for vendor and rider registration scenarios.","","Enables the onboarding workflow for supply-side users."
"IA-TSK-013","Implement API Endpoint to Request Login OTP","Create `POST /api/v1/auth/login/otp`. Checks that user exists, is active, and not locked out before sending OTP.","Task","Sprint Backlog","Critical","backend.lead@company.com","product.owner@company.com","2024-11-21","5.2","2","backend,auth,otp","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","User Authentication & Session Management","EPIC-002","Hyperlocal Delivery Service","US-005","IA-TSK-010","NestJS,Redis,AWS SNS","Medium","Low","A valid, active, unlocked user receives an OTP. Requests for other statuses return appropriate errors.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","API tests covering all user status scenarios.","","Initiates the secure login process for existing users."
"IA-TSK-014","Implement API Endpoint to Verify Login OTP and Generate JWTs","Create `POST /api/v1/auth/login/verify`. Validates OTP and generates short-lived access and long-lived refresh tokens.","Task","Sprint Backlog","Critical","backend.lead@company.com","product.owner@company.com","2024-11-22","8.3","3","backend,auth,jwt","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","User Authentication & Session Management","EPIC-002","Hyperlocal Delivery Service","US-005","IA-TSK-013","NestJS,Redis,JWT","Medium","Medium","Correct OTP returns 200 with tokens. Incorrect OTP returns 400 and increments failed attempt counter.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","API tests for success and failure, and counter logic.","","Completes the user login flow, granting access to the platform."
"IA-TSK-015","Implement Refresh Token API Endpoint","Create `POST /api/v1/auth/refresh`. Accepts a valid refresh token and returns a new access token.","Task","Sprint Backlog","Critical","backend.dev@company.com","product.owner@company.com","2024-11-25","6.2","3","backend,auth,jwt","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","User Authentication & Session Management","EPIC-002","Hyperlocal Delivery Service","US-005","IA-TSK-014","NestJS,JWT,Passport.js","Medium","Low","Valid refresh token returns new access token. Invalid token returns 401.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","API tests with valid, invalid, and expired refresh tokens.","","Enables persistent user sessions, improving user experience."
"IA-TSK-016","Implement Logout Endpoint with Token Revocation","Create `POST /api/v1/auth/logout`. Adds the refresh token's ID to a revocation list in Redis.","Task","Sprint Backlog","High","backend.dev@company.com","product.owner@company.com","2024-11-26","6.3","3","backend,auth,jwt,redis","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","User Authentication & Session Management","EPIC-002","Hyperlocal Delivery Service","US-005","IA-TSK-015","NestJS,Redis,JWT","Medium","Low","Logout returns 204. The logged-out refresh token can no longer be used to get a new access token.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","API test demonstrating a logged-out token cannot be refreshed.","","Provides a secure way for users to end their session."
"IA-TSK-017","Implement Server-Side Account Lockout Logic","Enhance `auth/login/verify` endpoint to track failed attempts in Redis. After 5 failures, create a lock key with a 15-minute TTL.","Task","Sprint Backlog","Critical","backend.lead@company.com","product.owner@company.com","2024-11-27","4.2","2","backend,auth,security,redis","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","User Authentication & Session Management","EPIC-002","Hyperlocal Delivery Service","US-006","IA-TSK-014","NestJS,Redis","Medium","Medium","5th incorrect OTP triggers a 15-min lock. All login-related endpoints return 429 while locked.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Integration test that simulates 5 failures, a locked request, and a successful request after the TTL expires.","","Protects user accounts from brute-force attacks."
"IA-TSK-018","Implement GET/PUT API for Customer Profile","Create `GET /api/v1/profile` and `PUT /api/v1/profile` endpoints, protected by `JwtAuthGuard`, to update user name and email.","Task","Sprint Backlog","High","backend.dev@company.com","product.owner@company.com","2024-11-18","6","3","backend,api,profile","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","User Profile & Data Management","EPIC-003","Hyperlocal Delivery Service","US-007","IA-TSK-014","NestJS,TypeORM","Low","Low","GET returns profile data. PUT updates name/email. PUT returns 400 for invalid email.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","API tests.","","Allows customers to manage their own personal information."
"IA-TSK-020","Implement CRUD API for Customer Delivery Addresses","Create full RESTful endpoints for `/api/v1/addresses` (GET, POST, PUT, DELETE), protected by `JwtAuthGuard` and enforcing ownership.","Task","Sprint Backlog","Critical","backend.lead@company.com","product.owner@company.com","2024-11-20","8.3","3","backend,api,address,postgis","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","User Profile & Data Management","EPIC-003","Hyperlocal Delivery Service","US-007","IA-TSK-019","NestJS,TypeORM,PostGIS","Medium","Low","A customer can CRUD their own addresses. Attempt to access another customer's address returns 403/404.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","API tests, including ownership constraint verification.","","Enables customers to manage delivery locations, critical for checkout."
"IA-TSK-021","Implement Event Listener for Profile Change Notifications","Create an event listener that subscribes to `ProfileUpdated` events and publishes a new event to an SNS topic for sensitive field changes.","Task","Sprint Backlog","High","backend.dev@company.com","product.owner@company.com","2024-11-21","4.2","2","backend,events,aws-sns","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","User Profile & Data Management","EPIC-003","Hyperlocal Delivery Service","US-007","IA-TSK-018","NestJS,AWS SNS","Low","Low","Email change triggers a `SendSecurityNotification` event. Name change does not.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","Notification service team","","Integration test that mocks the SNS client and verifies it is called with the correct payload.","","Enhances account security by notifying users of sensitive changes."
"IA-TSK-022","Implement NestJS Role-Based Access Control (RBAC) Guard","Create a generic `RolesGuard` in NestJS activated by a custom `@Roles('Administrator')` decorator to check JWT claims.","Task","Sprint Backlog","Critical","backend.lead@company.com","product.owner@company.com","2024-11-22","6.3","3","backend,security,rbac,nestjs","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","Administrator Capabilities","EPIC-004","Hyperlocal Delivery Service","US-008","IA-TSK-014","NestJS,TypeScript,JWT","Medium","Medium","An endpoint decorated with `@Roles('Administrator')` is accessible only by admin users. Others get 403.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Integration tests on a sample protected endpoint.","This is a foundational security component.","Provides the core mechanism for securing all administrative APIs."
"IA-TSK-023","Implement Admin API to List, Filter, and Search Users","Create `GET /api/v1/admin/users` with protection, pagination, filtering by role/status, and text search.","Task","Sprint Backlog","High","backend.dev@company.com","product.owner@company.com","2024-11-25","7.2","3","backend,api,admin","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","Administrator Capabilities","EPIC-004","Hyperlocal Delivery Service","US-008","IA-TSK-022","NestJS,TypeORM,SQL","Medium","Medium","Endpoint returns paginated list. Filtering and search work correctly. Non-admin gets 403.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","API tests for pagination, filtering, and searching.","Requires database indexes for performance.","Enables administrators to find and view user accounts."
"IA-TSK-024","Implement Admin API to Approve Pending User Registration","Create `PATCH /api/v1/admin/users/{id}/approve` to change status from `pending_verification` to `active` and publish `UserApproved` event.","Task","Sprint Backlog","Critical","backend.dev@company.com","product.owner@company.com","2024-11-26","5.2","2","backend,api,admin,workflow","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","Administrator Capabilities","EPIC-004","Hyperlocal Delivery Service","US-008","IA-TSK-022,IA-TSK-027","NestJS,TypeORM,AWS SQS/SNS","Low","Low","Endpoint updates status. `UserApproved` event is published. Action is audited. Incorrect initial state returns 409.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","API test and verification of the published event and audit log.","","Enables the core vendor/rider onboarding workflow."
"IA-TSK-025","Implement Admin API to Suspend and Deactivate Users","Create `PATCH` endpoints for `/suspend` and `/deactivate`. Updates status in DB, disables user in Cognito, publishes event, and audits action.","Task","Sprint Backlog","High","backend.lead@company.com","product.owner@company.com","2024-11-27","7","3","backend,api,admin,security","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","Administrator Capabilities","EPIC-004","Hyperlocal Delivery Service","US-008","IA-TSK-022,IA-TSK-027","NestJS,TypeORM,AWS Cognito","Medium","Medium","Suspend endpoint updates status to 'suspended' and disables in Cognito. Deactivate does the same for 'deactivated'. Events are published and actions audited.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Integration test verifying state change in both DB and Cognito.","","Provides administrators with tools to moderate the user base."
"IA-TSK-026","Implement API for System Configuration Management","Create `GET /api/v1/admin/config` and `PUT /api/v1/admin/config` endpoints, protected by `RolesGuard`, to manage key-value pairs in the `SystemConfiguration` table.","Task","Sprint Backlog","Medium","backend.dev@company.com","product.owner@company.com","2024-11-28","5.2","2","backend,api,admin,config","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","Administrator Capabilities","EPIC-004","Hyperlocal Delivery Service","US-009","IA-TSK-022,IA-TSK-027","NestJS,TypeORM","Low","Low","GET returns all configs. PUT updates configs. All changes are audited. Invalid data is rejected.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","API tests.","","Allows dynamic adjustment of business rules without deployments."
"IA-TSK-027","Implement Central AuditService","Create a core `AuditService` with a public `log` method responsible for writing records to the `AuditLog` table.","Task","Sprint Backlog","Critical","backend.lead@company.com","product.owner@company.com","2024-11-28","4","2","backend,security,audit","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","Administrator Capabilities","EPIC-004","Hyperlocal Delivery Service","US-010","IA-TSK-003","NestJS,TypeORM","Low","Medium","`AuditService` is injectable. The `log` method correctly creates a new record in the `AuditLog` table.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Unit tests and integration with other services.","This is a foundational service for all admin actions.","Provides a centralized, reusable mechanism for all audit logging."
"IA-TSK-028","Implement @Audit Decorator for Automated Logging","Create a custom NestJS decorator (`@Audit`) using an Interceptor to wrap method execution and call the `AuditService` automatically.","Task","Sprint Backlog","High","backend.lead@company.com","product.owner@company.com","2024-11-29","8.7","3","backend,nestjs,audit,decorator","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","Administrator Capabilities","EPIC-004","Hyperlocal Delivery Service","US-010","IA-TSK-027","NestJS,TypeScript","High","Medium","Applying `@Audit('User Approval')` to an endpoint automatically logs the action. Interceptor correctly extracts user ID.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Integration test showing that a decorated endpoint creates an audit log.","","Reduces boilerplate code and ensures consistent auditing across all admin actions."
"IA-TSK-029","Implement Admin API to View Audit Trail","Create `GET /api/v1/admin/audit-logs` with protection, pagination, and filtering by actor and date.","Task","Sprint Backlog","High","backend.dev@company.com","product.owner@company.com","2024-11-29","6.2","3","backend,api,admin,audit","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","Administrator Capabilities","EPIC-004","Hyperlocal Delivery Service","US-010","IA-TSK-027,IA-TSK-022","NestJS,TypeORM","Medium","Low","Endpoint returns paginated list of logs. Filtering by actor and date works correctly.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","API tests.","","Allows administrators to review actions for security and compliance."
"IA-TSK-030","Extend Registration to Capture Default Consents","Modify the registration service to create records in the `UserConsent` table for each defined consent type when a new user is created.","Task","Sprint Backlog","Critical","backend.dev@company.com","product.owner@company.com","2024-11-25","4.2","2","backend,compliance,dpdp","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","Compliance & Data Governance","EPIC-005","Hyperlocal Delivery Service","US-011","IA-TSK-011","NestJS,TypeORM","Low","Low","A new user registration also creates corresponding rows in the `UserConsent` table.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Integration test verifying the creation of related consent records.","","Ensures the system captures user consent from the moment of registration."
"IA-TSK-031","Implement API for Customer Consent Management","Create `GET /api/v1/profile/consents` and `PUT /api/v1/profile/consents` endpoints, ensuring users cannot revoke mandatory consents.","Task","Sprint Backlog","Critical","backend.dev@company.com","product.owner@company.com","2024-11-26","4.2","2","backend,compliance,dpdp,api","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","Compliance & Data Governance","EPIC-005","Hyperlocal Delivery Service","US-011","IA-TSK-030","NestJS,TypeORM","Low","Medium","GET returns consents. PUT updates optional consents. PUT returns 400 for mandatory consents.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","API tests.","","Allows users to manage their data privacy settings, fulfilling a key compliance requirement."
"IA-TSK-032","Implement 'Request Erasure' API Endpoint","Create a `DELETE /api/v1/profile` endpoint. It must check for active orders, publish a `UserErasureRequested` event, and invalidate the user's session.","Task","Sprint Backlog","Critical","backend.lead@company.com","product.owner@company.com","2024-11-27","6.2","3","backend,compliance,dpdp,api","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","Compliance & Data Governance","EPIC-005","Hyperlocal Delivery Service","US-012","","NestJS,AWS SQS/SNS","Medium","Medium","Request succeeds for user with no active orders, publishes event. Fails with 409 if active orders exist.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","Order Service team for API","","API tests for both success and failure (active orders) scenarios.","","Initiates the legally mandated 'Right to Erasure' process."
"IA-TSK-033","Implement PII Anonymization Logic in Identity Service","Create an SQS/SNS event listener for `UserErasureRequested` events. The handler will update user tables, replacing PII fields with generic placeholders and setting status to `anonymized`.","Task","Sprint Backlog","Critical","backend.lead@company.com","product.owner@company.com","2024-11-29","19","8","backend,compliance,dpdp,data","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","Compliance & Data Governance","EPIC-005","Hyperlocal Delivery Service","US-012","IA-TSK-032","NestJS,TypeORM,SQL","High","High","Receiving a `UserErasureRequested` event triggers the anonymization process. PII fields are overwritten. User status is updated.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Database inspection after the event is processed.","This is a sensitive, destructive operation that requires extensive testing.","Fulfills the 'Right to Erasure' by anonymizing user data across the platform."
"IA-TSK-035","Instrument Application and Expose Prometheus Metrics","Integrate `@willsoto/nestjs-prometheus` to automatically instrument controllers and expose a `/metrics` endpoint. Update Terraform to annotate for Prometheus scraping.","Task","Sprint Backlog","High","devops.engineer@company.com","product.owner@company.com","2024-11-28","6","3","backend,observability,metrics,prometheus","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","Observability and Monitoring","EPIC-006","Hyperlocal Delivery Service","US-013","IA-TSK-008","NestJS,Prometheus,Kubernetes","Medium","Low","`/metrics` endpoint returns data in Prometheus format. Prometheus in staging successfully scrapes the service.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Viewing metrics in the Prometheus UI.","","Provides quantitative data on service health and performance."
"IA-TSK-036","Implement Distributed Tracing with OpenTelemetry","Configure the OpenTelemetry SDK for Node.js in the application's bootstrap process. Auto-instrument common libraries like `http`, `express`, and `pg`.","Task","Sprint Backlog","Medium","backend.lead@company.com","product.owner@company.com","2024-11-29","12.2","5","backend,observability,tracing,opentelemetry","Sprint 2","Deliver all administrative user management features, compliance workflows, and full service observability.","Observability and Monitoring","EPIC-006","Hyperlocal Delivery Service","US-013","IA-TSK-034","NestJS,OpenTelemetry,Node.js","High","Medium","A request generates a trace with multiple spans. The trace can be viewed in a backend like Jaeger/X-Ray. `correlationId` in logs matches `traceId`.","Code reviewed; Unit tests passing; Integration tests passing; Documentation updated","2024-10-28T09:00:00Z","2024-10-28T09:00:00Z","2024-11-18","2024-11-29","100%","","","Triggering a request and finding the complete trace in the tracing UI.","","Enables end-to-end visibility of requests in a microservices architecture, crucial for debugging."