"task_id","task_name","primary_skill","secondary_skills","complexity_level","estimated_hours","required_experience","productivity_factor","adjusted_hours","team_size","collaboration_required","dependencies","critical_path","skill_learning_curve","ramp_up_hours","resource_notes","alternative_approach","risk_factors","mitigation_strategy","quality_overhead","review_hours","documentation_hours","testing_coordination","integration_overhead"
"VND-005-T2","Backend: Implement Vendor Profile GET and PATCH Endpoints","Backend Development","NestJS,TypeScript,REST API,TypeORM","Medium","8.3","Mid","1","12.3","1","true","VND-005-T1","","None","","Standard CRUD endpoint with ownership validation. Requires solid NestJS skills.","Could be handled by a Senior dev for faster completion, but suitable for a Mid-level dev.","Incorrect authorization logic could expose vendor data.","Pair programming session on security-critical parts and thorough QA testing.","1.2","0.8","0.5","1","0.5"
"VND-007-T2","Eventing: Implement Transactional Outbox for Status Change","Backend Development","System Design,PostgreSQL,Distributed Systems Patterns,NestJS","High","10.7","Senior","1.2","18.2","1","true","VND-007-T1","true","Medium","4","High-risk task requiring deep understanding of distributed systems to ensure data consistency.","Simplified event publishing with a reconciliation job, but increases data staleness.","RISK-002: System inconsistency if event publishing fails after DB commit.","Allocate senior developer with prior experience in this pattern. Implement comprehensive integration tests.","2.5","1.5","1","2","1.5"
"VND-013-T1","Analysis: Design Atomic CSV Import Strategy","Architecture","System Design,Database Architecture,Risk Analysis","High","6.3","Senior","1.3","9.8","1","true","","true","None","","Critical design task to mitigate high risk of data corruption from bulk operations.","Proceed without atomic design, accepting higher risk of data inconsistency.","RISK-004: Potential for mass data corruption if design is flawed.","Mandatory architectural review with a principal engineer before implementation.","1","1.5","1","",""
"VND-029-T3","Integration: Update Order Service to Check Vendor Status","Backend Development","Microservices,API Integration,NestJS","High","10.3","Senior","1.1","16.3","1","true","VND-029-T1","true","Low","2","High-risk integration with another team's service. Requires strong communication and contract testing.","Vendor service could push status to a shared cache, but this increases coupling.","RISK-003: Delays from the Order Management service team will block this task.","Implement Consumer-Driven Contract Testing (Pact) to stabilize the API contract early.","1.5","1.5","0.5","1.5","1"
"VND-029-T4","QA: Write Tests for Suspension Logic and Enforcement","Quality Assurance","E2E Testing,Cypress,TypeScript,API Testing","High","10.3","Mid","1","15.3","1","true","VND-029-T1,VND-029-T3","","Low","1","Requires complex E2E test setup to simulate vendor suspension and a blocked customer order.","Manual testing only, but this is high-risk for regressions.","Test environment instability could block E2E test development.","Develop robust data seeding scripts for creating test scenarios reliably.","","1","1","","3"