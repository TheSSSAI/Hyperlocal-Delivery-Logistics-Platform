"gate_name","gate_type","trigger_event","success_criteria","failure_action","responsible_team","automation_level","tools_used","measurement_frequency","escalation_procedure","historical_pass_rate","average_resolution_time","business_impact"
"Pull Request (PR) Gate","Static & Unit","Code commit to a feature branch","Unit test coverage > 80% (REQ-1-101); All unit and integration tests pass; Linter passes; No critical issues in SonarQube scan.","Block merge to main branch.","Development Team","Fully Automated","GitHub Actions, Jest, ESLint, SonarQube","Every commit","PR author is notified automatically.","90","0.5","Prevents basic bugs and code quality issues from entering the main codebase."
"Staging Deployment Gate","E2E & Security","Deployment to Staging environment","E2E smoke test suite passes (100%); Container vulnerability scan (Trivy) finds zero 'Critical' vulnerabilities; API contract tests (Pact) pass.","Rollback deployment; Block promotion to Production.","QA & DevOps Teams","Fully Automated","GitHub Actions, Cypress, Detox, Trivy, Pact","Every deployment to Staging","On-call engineer and release manager are notified via PagerDuty/Slack.","85","4","Ensures the release candidate is stable and secure before final validation."
"Pre-Production Release Gate","Regression & Performance","Manual trigger before scheduled production release","Full E2E regression suite passes (>98%); Key performance benchmarks are met (P95 latency < 200ms for critical APIs); Manual UAT sign-off from Product Owner; No P0/P1 bugs in release candidate.","Abort production release; Triage failing tests/bugs.","Release Manager, QA Lead, Product Owner","Partially Automated","Cypress, Detox, k6, Jira","Once per release cycle","Go/No-Go meeting with all stakeholders.","95","24","Final check to prevent critical bugs, regressions, or performance degradation from reaching production."