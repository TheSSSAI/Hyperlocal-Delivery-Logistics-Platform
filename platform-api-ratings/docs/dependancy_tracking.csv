"dependency_id","from_task","to_task","dependency_type","description","critical_path","lead_time_days","responsible_team","coordination_required","risk_level","mitigation_plan","status","resolution_date","impact_if_delayed","escalation_required"
"DEP-001","INFRA-002","INFRA-001","Technical","The EKS Kubernetes cluster must be deployed into the pre-existing VPC network.","true","","DevOps","","Low","Ensure INFRA-001 is completed and verified before starting INFRA-002.","Active","2024-07-05","All application deployment capabilities will be delayed.",""
"DEP-002","DEVOPS-002","INFRA-002","Technical","The Continuous Deployment (CD) pipeline requires a running EKS cluster to deploy to.","true","","DevOps","","Low","Develop CD workflow against a local k8s cluster (minikube) in parallel, but final testing requires the provisioned EKS.","Active","2024-07-19","Automated deployments will be blocked.",""
"DEP-003","IAM-002","IAM-001","Technical","User account creation depends on the successful generation and sending of an OTP.","true","","Backend","","Low","Define API contract early to allow parallel frontend development with mock API.","Active","2024-08-02","User registration cannot be completed.",""
"DEP-004","ORD-CHK-001","PAY-PROC-001","Technical","The checkout orchestration Saga is critically dependent on the payment gateway integration for processing payments.","true","2","Backend","true","High","Develop against a stable mock of the Payment service until the actual integration is complete and verified.","Active","2024-10-11","The entire customer checkout flow will be blocked.",""
"DEP-005","LOG-ALLOC-001","ORD-CHK-001","Functional","The rider allocation engine is triggered only after an order is successfully placed and paid for.","true","","Backend","true","Medium","Use a mock event publisher to simulate `OrderPlaced` events for testing the allocation service independently.","Active","2024-10-25","No deliveries can be dispatched.",""